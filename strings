1)#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the camelcase function below.
def camelcase(s):
    a=0
    for i in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
        for x in s:
            if i in x:
                a=a+1
    return(a+1)
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = camelcase(s)

    fptr.write(str(result) + '\n')

    fptr.close()



2)#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the minimumNumber function below.
def minimumNumber(n, password):
    add = 0    
    if any(i.isdigit() for i in password)==False:
        add+=1
    if any(i.islower() for i in password)==False:
        add+=1
    if any(i.isupper() for i in password)==False:
        add+=1
    if any(i in '!@#$%^&*()-+' for i in password)==False:
        add+=1
    return max(add,6-n)
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    password = input()

    answer = minimumNumber(n, password)

    fptr.write(str(answer) + '\n')

    fptr.close()


3)#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the marsExploration function below.
def marsExploration(s):
    lst=[]
    mex=['S','O','S']
    error=0
    for i in range(0, len(s), 1):
        lst.append(s[i : i + 1])
    for a,b,c in zip(lst[0::3], lst[1::3], lst[2::3]):
        if a!=mex[0]: 
            error+=1
        if b!=mex[1]: 
            error+=1
        if c!=mex[2]: 
            error+=1
    return error
    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = marsExploration(s)

    fptr.write(str(result) + '\n')

    fptr.close()


4)#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the hackerrankInString function below.
def hackerrankInString(s):
    match = re.search('.*h.*a.*c.*k.*e.*r.*r.*a.*n.*k.*', s)
    if match:
        return 'YES'
    else:
        return 'NO'

     
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input())

    for q_itr in range(q):
        s = input()

        result = hackerrankInString(s)

        fptr.write(result + '\n')

    fptr.close()


5)#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the superReducedString function below.
def superReducedString(s):
    redstr=[]
    for _ in range(len(s)):
        if len(redstr)==0 or redstr[-1]!=s[_]:
            redstr.extend(s[_])
        else:
            redstr.pop()
    if len(redstr)==0:
        return "Empty String"
    else:
        return ''.join(redstr)

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = superReducedString(s)

    fptr.write(result + '\n')

    fptr.close()
